installerInfo: '{ "productId": "Helm_prometheus_artifactory/{{ .Chart.Version }}", "features": [ { "featureId": "ArtifactoryVersion/{{ default .Chart.AppVersion .Values.artifactory.image.version }}" }, { "featureId": "{{ if .Values.postgresql.enabled }}postgresql{{ else }}{{ .Values.database.type }}{{ end }}/0.0.0" }, { "featureId": "Platform/{{ default "kubernetes" .Values.installer.platform }}" },  { "featureId": "Channel/Helm_prometheus_artifactory" } ] }'
artifactory:
  customVolumes: |
    - name: fluentd-sidecar-configmap  
      configMap:
        name: artifactory-fluentd-sidecar-configmap
        items:
        - key: fluent.conf.rt
          path: fluentd.conf
  customInitContainersBegin: |
    - name: "prepare-fluentd-conf-on-persistent-volume"
      image: "{{ .Values.initContainerImage }}"
      imagePullPolicy: "{{ .Values.artifactory.image.pullPolicy }}"
      command:
        - 'sh'
        - '-c'
        - >
          mkdir -p {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/;
      volumeMounts:
        - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
          name: volume
  customSidecarContainers: |
    - name: "artifactory-fluentd-sidecar"
      image: "partnership-public-images.jfrog.io/fluentd/fluentd:1.13.2"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
          name: volume
        - mountPath: {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf
          name: fluentd-sidecar-configmap 
          subPath: fluentd.conf
          readOnly: true
      env:
        - name: JF_PRODUCT_DATA_INTERNAL
          value: {{ .Values.artifactory.persistence.mountPath }}
        - name: FLUENTD_CONF
          value: ../../../../{{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf

## Allows to add additional kubernetes resources
## Use --- as a separator between multiple resources
## For an example, refer - https://github.com/jfrog/log-analytics-prometheus
additionalResources: |
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: "artifactory-fluentd-sidecar-configmap"
  data:
    fluent.conf.rt: |-
      <source>
        @type tail
        @id artifactory_request_tail
        path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/artifactory-request.log"
        pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/artifactory-request.log.pos"
        tag jfrog.rt.artifactory.request
        <parse>
          @type regexp
          expression /^(?<timestamp>[^\|]*)\|(?<trace_id>[^\|]*)\|(?<remote_address>[^\|]*)\|(?<username>[^\|]*)\|(?<request_method>[^\|]*)\|(?<request_url>[^\|]*)\|(?<return_status>[^\|]*)\|(?<request_content_length>[^\|]*)\|(?<response_content_length>[^\|]*)\|(?<request_duration>[^\|]*)\|(?<request_user_agent>.+)$/m
          time_key timestamp
          time_format %Y-%m-%dT%H:%M:%S.%LZ
          types response_content_length:integer, request_content_length:integer, return_status_code:integer
        </parse>
      </source>

      <filter jfrog.rt.artifactory.request>
        @type record_transformer
        <record>
          log "artifactory-request.log"
        </record>
      </filter>

      <match jfrog.rt.artifactory.request>
        @type stdout
        <format>
          @type json
        </format>
      </match>
  
